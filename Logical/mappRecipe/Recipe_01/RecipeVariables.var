(*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*)
(*Local constants*)
VAR CONSTANT
	OK : USINT := 0; (*Constant for status OK *)
	REC_DOES_NOT_EXIST : UINT := 65535; (*Constant for record does not exist*)
	YES : USINT := 1;
	NO : USINT := 2;
END_VAR
(*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*)
(*Local Variables*)
VAR
	RECIPE : REFERENCE TO recMAIN; (*Local recipe structure*)
	RecipeIDs : ARRAY[0..REC_MAX_NUM] OF BOOL; (*Used with unicode option, keeps tracks of the IDs used*)
	RecipeIndex : UINT; (*Current recipe index*)
	RecipeName : WSTRING[REC_NAME_LENGTH]; (*Local recipe name*)
	RecipeNameNew : WSTRING[REC_NAME_LENGTH]; (*Local recipe new name*)
	RecipeFullFileName : STRING[200]; (*Full recipe name*)
	RecipeFilterOld : ARRAY[0..REC_MAX_CLIENTS_ID] OF WSTRING[REC_NAME_LENGTH]; (*Track filter change *)
	RecipeNumOld : ARRAY[0..REC_MAX_CLIENTS_ID] OF UINT;
	rec_state : recSTATE := REC_WAIT; (*Main step index *)
	animation : USINT := 0; (*Animation for working status	*)
	VisuSlotID : USINT; (*Slot of the visualization that is current used*)
	idx : UINT;
	idy : UINT;
	has_oversized_items : BOOL; (*Indicates that at least one recipe name exceeds the maximum length*)
	tmpStr1 : STRING[200]; (*Temporary string variable *)
	tmpStr2 : STRING[200]; (*Temporary string variable *)
	tmpWStr1 : WSTRING[REC_VIS_LENGTH]; (*Temporary unicode string variable *)
	tmpWStr2 : WSTRING[REC_VIS_LENGTH]; (*Temporary unicode string variable *)
	lDirReadData : fiDIR_READ_EX_DATA; (*File information structure*)
	this : STRING[100]; (*Name of the task and global recipe structure*)
	taskID : UDINT; (*Task ID*)
	taskGroup : USINT; (*Task Group*)
	taskStatus : UINT; (*Status of task information*)
	pvADR : UDINT; (*Adress of global variable structure*)
	pvLEN : UDINT; (*Lenght of global variable structure*)
	pvStatus : UINT; (*Status of global variable information*)
	MpRecipeDone : BOOL; (*Generic status done*)
	MpRecipeError : BOOL; (*Genereic status error*)
	MpRecipeStatusID : DINT; (*Generic error details*)
	DoubleClickRecipeName : ARRAY[0..REC_MAX_CLIENTS_ID] OF TON_10ms;
	response_header : httpResponseHeader_t;
	response_header_data : STRING[300];
	upload_delay : TON_10ms;
	download_timeout : TON_10ms;
	upload_response : STRING[600];
	file_name_start : UDINT;
	file_name_len : UDINT;
	file_data_start : UDINT;
	file_data_len : UDINT;
	item_name : STRING[REC_NAME_LENGTH];
END_VAR
(*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*)
(*Local function calls*)
VAR
	DInfo : DirInfo;
	DOpen : DirOpen;
	DRead : DirReadEx;
	DClose : DirClose;
	DCreate : DirCreate;
	FOpen : FileOpen;
	FCreate : FileCreate;
	FRead : FileReadEx;
	FWrite : FileWrite;
	FClose : FileClose;
	FDelete : FileDelete;
	FRename : FileRename;
	WebserviceDownload : httpService := (0);
	WebServiceUpload : httpService := (0);
	AsMemPartCreate_0 : AsMemPartCreate;
	AsMemPartAllocClear_0 : AsMemPartAllocClear;
	MpRecipeCsv_0 : MpRecipeCsv;
	MpRecipeXml_0 : MpRecipeXml;
	MpRecipeRegPar_0 : MpRecipeRegPar;
	MpRecipeRegPar_1 : MpRecipeRegPar;
END_VAR
(*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*)
(*Error numbers*)
VAR CONSTANT
	ERR_REC_TOO_MANY_CLIENTS : DINT := 50010; (*More than 3 clients try to connect to recipe management*)
	ERR_REC_NAME_EMPTY : DINT := 50100; (*Recipe name is empty*)
	ERR_REC_NAME_EXISTS : DINT := 50101; (*Recipe name already exists*)
	ERR_REC_NAME_LOST : DINT := 50102; (*Recipe name was not found*)
	ERR_REC_NAME_LENGTH : DINT := 50103; (*One or more recipe names exceeds maximum length*)
END_VAR
VAR
	ERR_REC_DEV_NAME_EMPTY : DINT := 50110; (*Device name is empty*)
END_VAR
VAR CONSTANT
	ERR_REC_VAR_NAME_EMPTY : DINT := 50120; (*Variable name is empty*)
	ERR_REC_NOT_INITIALIZED : DINT := 50130; (*Recipemanagement is not initialized*)
	ERR_REC_MAX_NUM : DINT := 50140; (*Maximum number of recipes reached*)
	ERR_REC_TASK_NAME : DINT := 50150; (*Task name is incorrect*)
END_VAR
VAR
	ERR_MEM_ALLOC : UINT := 50300; (*Memory allocation for file upload and download failed*)
	ERR_MEM_DOWNLOAD : UINT := 50310; (*Size of download file exceeds maximum*)
	ERR_TIMEOUT_DOWNLOAD : UINT := 50320; (*Download response timed out*)
	ERR_POS_NAME_UPLOAD : UINT := 50400; (*Can not find filename in upload response*)
	ERR_SIZE_NAME_UPLOAD : UINT := 50401; (*Can not determine end of filename in upload response*)
	ERR_LEN_NAME_UPLOAD : UINT := 50402; (*Filename is too long in upload response*)
	ERR_POS_DATA_UPLOAD : UINT := 50403; (*Can not find data in upload response*)
	ERR_SIZE_DATA_UPLOAD : UINT := 50404; (*Can not determine end of data in upload response*)
	ERR_MEM_UPLOAD : UINT := 50410; (*Size of upload file exceeds maximum size*)
	ERR_UNICODE_UPLOAD : UINT := 50420; (*Upload is not supported when unicode is used*)
END_VAR
